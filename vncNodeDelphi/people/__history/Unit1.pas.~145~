unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, IdBaseComponent, IdComponent, IdTCPConnection, IdTCPClient, ExtCtrls,
  IdContext, IdCmdTCPClient, Jpeg;

type
  TmainForm = class(TForm)
    tcpClient: TIdTCPClient;
    Timer1: TTimer;
    Timer2: TTimer;
    procedure FormCreate(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure Timer2Timer(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

const
  hello : String = '100,';    //приветствие пипла

var
  mainForm: TmainForm;
  userId:string;

implementation

{$R *.dfm}

procedure TmainForm.FormCreate(Sender: TObject);
var testString:string;
    s:TStringStream;
begin
  TCPClient.Connect();
  TCPClient.Socket.WriteLn(hello);
  userId:=TCPClient.Socket.ReadLn;
  mainForm.Text:='¬аш ид: '+userId;
end;

procedure TmainForm.Timer1Timer(Sender: TObject);
var
{//логирование
var
myFile : TextFile;
text   : string;
//запись в лог
AssignFile(myFile, 'Test.txt');
Append(myFile);
WriteLn(myFile, coordMouse);
CloseFile(myFile);
//-----------------------}
fullReadString:string;
commandServer:string;
coordMouse: string;
//coord var
ifCoord:string;
i:integer;
sLeftCoord, sRigthCoord:string;
//-----------------------
canvasDesktop: TCanvas;
memoryDesktop:TMemoryStream;
jpgimg: TJPEGImage;
bitMapDesktop: TBitmap;

begin
//-----------------------
//in mouse coord
//tcpClient.Socket.WriteLn('getMouseCoords,'+userId);
canvasDesktop:=TCanvas.Create;
        canvasDesktop.Handle:=GetDC(HWND_DESKTOP);
        bitMapDesktop:=TBitmap.Create;
        bitMapDesktop.Width:=Screen.Width;
        bitMapDesktop.Height:=Screen.Height;
        bitMapDesktop.Canvas.CopyRect(bitMapDesktop.Canvas.ClipRect, canvasDesktop, canvasDesktop.ClipRect);
        if not DrawIcon(bitMapDesktop.Canvas.Handle, Mouse.CursorPos.X, Mouse.CursorPos.Y, GetCursor) then
          begin
        end;
        jpgimg:=TJPEGImage.Create;
        jpgimg.Assign(bitMapDesktop);
        jpgImg.CompressionQuality:=50;
        memoryDesktop:=TMemoryStream.Create;
        jpgimg.SaveToStream(memoryDesktop);
        tcpClient.Socket.Write(memoryDesktop, 0, True);
        bitMapDesktop.Free;
        jpgimg.Free;
        memoryDesktop.Clear;
        memoryDesktop.Free;
//-----------------------
fullReadString:=TCPClient.Socket.ReadLn;
commandServer:=copy(fullReadString, 0, 3);
if (commandServer='102') then begin
  i := pos('_', fullReadString);
  if i > 0 then
  begin
    sLeftCoord := copy(fullReadString, 4, i-4);
    sRigthCoord := copy(fullReadString, i + 1, Length(fullReadString) - i);
    SetCursorPos(StrToInt(sLeftCoord), StrToInt(sRigthCoord));
    mainForm.caption:= sLeftCoord+'_'+sLeftCoord;
  end;
end;
end;

procedure TmainForm.Timer2Timer(Sender: TObject);
var
fullReadString:string;
commandServer:string;
coordMouse: string;
//coord var
ifCoord:string;
i:integer;
sLeftCoord, sRigthCoord:string;
begin
//in mouse coord
//tcpClient.Socket.WriteLn('getMouseCoords,'+userId);
fullReadString:=TCPClient.Socket.ReadLn;
commandServer:=copy(fullReadString, 0, 3);
if (commandServer='102') then begin
  i := pos('_', fullReadString);
  if i > 0 then
  begin
    sLeftCoord := copy(fullReadString, 4, i-4);
    sRigthCoord := copy(fullReadString, i + 1, Length(fullReadString) - i);
    SetCursorPos(StrToInt(sLeftCoord), StrToInt(sRigthCoord));
    mainForm.caption:= sLeftCoord+'_'+sLeftCoord;
  end;
end;
end;

end.
